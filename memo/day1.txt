day01_20221014

수업 예제 링크
https://colab.research.google.com/drive/1-7l0bQFatEBvhn0-PkR7Aej9nobm4V0j?usp=sharing

1. 오리엔테이션
1) 강사 소개
- 과목 : 파이썬 기초
- 강사 이름 : 김영선
- 교재 : 멘토시리즈 파이썬(복습, 예습, 문제풀이 등 보충교재로 사용)
- 메일 : yskim1635@gmail.com
	메일 제목 : [파이썬1]_1900_본인이름
	본문 내용 : 소스내용을 그대로 붙이기
		  결과화면 : 이미지 캡처
		정답을 알려드리지 않는다!!
		why : 문제해결능력을 키워야하기 때문에

2) 수업 관련
- 수업시간 : 10/14 ~ 11/09, 19:00 ~ 22:00, 10일 수업
	금 / 월 수 / 월 수 금 / 월 수 / 월 수

	3시간 => 50분 수업, 10분 휴식
	3h * 10 = 30h
	
	※ 휴강일 없음!!!
	※ 결석, 지각은 하지 않기!!(불가피한 경우, 복습 필수!)

- 수업 방식 : 대면 + 비대면
	대면 고정좌석!!
	* 대면으로 나오다가 비대면으로 전환 시 다른 사람이 자리에 앉을 수 있음
	영상은 외부 유출금지!! 개인만 소장!!!

	이론 및 설명 => 예제 => 메모장 => 실습	과제

- 수업 자료 제공
	오픈 카카오 채팅방
	https://open.kakao.com/o/g63vPTHe
	참여 코드 : 1014
	- 수업자료제공
	- 과제 제공

3) 수강생분들이 지켜야 할 것!
- 배려있는 채팅방 문화를 위해 활동 시간 지키기(am9:00~pm11:00)
- 공지나 자료 공유가 되면 공감표시 누르기
- 수업 시간에 배운 내용은 꼭 복습하기
- 적극적인 수업 참여

---------------------------------------------------------------------------------------
1. python
	- 고급언어
	- 귀도 반 로섬 1991년 개발한언어
	- 저급언어와 고급언어 번역프로그램은 컴파일, 인터프리터
	*컴파일 : 프로그램을 실행하기 전에 컴파일이라는 변환작업이 필요한 프로그래밍 방식
		사람이 작성한 프로그램언어->기계어로 변환
		파일을 통으로 번역
	*인터프리터 : 프로그램을 순차적으로 실행하는 기능을 가진 프로그래밍 방식
		      한줄씩 번역
	
	- 언어별 특징
		c,c++ : 하드웨어, 속도
		java : 배포가 쉬움
		python : 인공지능, 데이터 시각화 등

2. python 특징
	- 인터프리터 언어(대화형 언어)
		한줄 한줄씩 실행
		여러줄의 코드가 하나의 코드 셀 안에 있다면 위에서부터 차례대로 한줄씩 실행
	- 완전 객체지향언어(<-> 절차지향언어)
		* 객체지향언어 (java, python) : 클래스라는 틀을 만들고 그 속성을 지닌 객체들을
				미리 만들어서 객체를 사용해서 코딩하는 것, 수정 편함
		* 절차지향언어(c언어) : 입력한 순서대로 프로그램이 실행되는 것, 수정이 귀찮음
	- 인간의 삶의 방식을 개발에 적용시키는 패러다임
	- 불러다 쓸 수 모듈이 많음, 하나의 사이트에서 관리함(www.pypi.org)
	- 장점
	 	쉽고, 가독성이 높음, 빠른 개발속도, 다른 언어나 라이브러리에 쉽게 연동 가능
	- 단점
		느린 실행속도, 모바일 앱개발에 적용하기 힘듦

3. python 개발도구
	파이참, 비주얼 스튜디오, 비주얼 스튜디오 코드, 구글코랩, 주피터 노트북,...

	구글 코랩 : 구글의 클라우드 환경이므로 컴퓨터 사양과 관계없이 인터넷만 연결된다면
		어디서든 사용 가능하다
	텍스트 셀 : 설명을 적기위한 공간(메모장)
		프로그램 실행에는 영향을 미치지 않음
	코드 셀 : 명령어를 입력하는 공간
		셸단위로 실행함

4. 파이썬 기본 문법
함수
	이름뒤에 소괄호
	어떠한 기능을 한다

print()
	출력함수
	괄호안에 있는 값을 출력한다
	,(콤마)로 구분해서 쓰면 여러가지 값을 함께 사용가능하다

'~', "~"
	컴퓨터가 명령어가 아닌 문자열 값임을 구분할 수 있도록 사용하는 것
	(문자열 : 문자들의 나열)

5. 주석(Comment)
	문장의 뜻을 쉽게 풀이해 놓은것(설명문)
	프로그램 수행에는 전혀 영향을 미치지않음

	용도
		1) 프로그램의 개요를 소스코드 적을 때
		2) 어떤 변수나 로직등에 설명이 필요할 때
		3) 이미 작성한 부분을 실행시에 임시로 빼고싶을 때
		4) 개발자들끼리 소통을 위해

	사용법
		한줄 주석 : #
		여러줄 주석 : '''~''', """~"""
			본래 용도는 Docstring을 작성하는 용도
			https://peps.python.org/pep-0257/

6. 변수
	값을 저장하는 공간
	값을 재사용하기 위해서 사용함

  변수의 생성
	변수이름 = 값
		오른쪽에 있는 값을 왼쪽에 대입한다

	name = '김영선'
	num = 10

  변수의 사용
	변수명
	print(name)
		출력결과 => 김영선

  =
	대입연산자
	오른쪽에 있는 값을 왼쪽의 저장공간에 대입해줘~

  변수명 작성시 주의사항
	1. 띄어쓰기 불가능
		my age = 10	(x) #오류
		my_age = 10 	(o) #팟홀표기법/스네이크 표기법(소문자로만 구성, 단어가 바뀔때 _로 연결, 뱀처럼 길게 생김)
		myAge = 10	(o) #카멜표기법(소문자로 시작, 단어가 바뀔때 첫문자를 대문자로 작성, 낙타의 등 모습과 유사)
		Myage = 10	(o) #파스칼표기법(클래스명 만들때 주로 사용, 낙타의 등모습과 유사)

	2. 특수문자 사용 불가능
		@#$% = 10 	(x) #오류
		역할이 부여되어 있어 사용이 불가능, 단 (_)언더바만 가능

	3. 숫자로 시작하면 안됨
		1age = 10	(x) #오류
		숫자는 중간이나 끝에만 사용이 가능함
	
	4. 키워드는 사용 불가능
		for = 10		(x) #오류
		역할이 부여되어 있어 사용이 불가능

	변수명 작성시 권고사항
	1. 웬만하면 의미있는 단어를 사용하자
		나이가 10살이다, 이름이 김영선이다
		age = 10, name = '김영선'

	2. 웬만하면 소문자로 시작하자
		age = 10, number = 5

7. 기본 자료형(Data Type)
	정수	int	int(n)	n에 들어온 모든 것들이 정수로 변환
	실수	float	float(n)	n에 들어온 모든 것들이 실수로 변환
	논리	bool	
	문자열	str	

	1) 정수형( int )
		양의정수, 음의 정수, 0 을 포함
		int()함수를 이용하면 다른 자료형의 값을 정수형 데이터로 변환 가능
		(ex) int(1.89)	=> 1
		     int(-123.4)	=> -123

	2) 실수형( float )
		소수점을 가진 모든 수
		float()함수를 이용하면 다른 자료형의 값을 실수형 데이터로 변환 가능
		(ex) float(3)	=> 3.0
		      float(-28)	=> -28.0

<복습>
1. 컴퓨터 = 하드웨어 + 소프트웨어
2. 컴퓨터 언어 = 저급언어 + 고급언어
	고급언어 => 파이썬
3. 저급언어와 고급언어 번역 프로그램 : 컴파일, 인터프리터
	파이썬 => 인터프리터
4. 파이썬을 만든 사람 : 귀도 반 로섬
5. 개발도구 : 파이참, 비주얼 스튜디오 코드, 코랩, 주피터 노트북,...
6. 파이썬 기본 문법
	1) 주석과 출력
	   주석 = 설명문, 프로그램 실행에는 영향을 미치지 않음
	   출력함수 print()
	2) 변수와 변수명
	   변수 : 저장 공간
	   변수명 : 저장공간의 이름
	3) 기본 자료형(Data Type)
	   정수형	int
	   실수형 float
	   논리형 bool
	   문자열 str
		=> 다른 자료형들의 형변환 가능
















