day07
과제풀이 -> 복습 -> 딕셔너리 -> 함수(내장함수) -> 문자열 메소드

0. 복습
	리스트 : 시퀀스 자료형, 추가 수정 삭제 가능, 중복값 가능 
	튜플 : 시퀀스 자료형, 읽기전용 리스트, 중복값 가능
	세트 : 비시퀀스 자료형, 중복값 불가능, 순서가 없다

1. 딕셔너리(dict)
	- 키(key)와 밸류(value)가 항상 한쌍으로 저장됨
	- key값은 중복이 불가능
 
 딕셔너리 생성
	dict = {키1:값1, 키2:값2, ..}

 빈딕셔너리 생성
	dict명 = dict()
	dict명 = {키:값}

 딕셔너리 메소드
	.keys()	: key값들만 모여있는 새로운 컬렉션
	.values()	: value값들만 모여있는 새로운 컬렉션
	.itemes()	: (key, value) 튜플형태로 담겨있는 새로운 컬렉션

2. 함수
	(ex) 라면만들기 함수
		 라면 뜯고 =>물과 재료를 넣고 몇분을 끓이고 그릇에 담는다 => 완성된 라면

	- len()	: 자료를 넣으면 그 자료의 길이를 알려줌
	- print()	: 자료를 넣으면 그 자료를 출력해줌
	- input()  : 자료를 넣으면 그 자료를 입력해줌

	- 특정 기능을 실행하는 코드 또는 코드의 모임
	- 함수종류 : 내장함수, 외장함수, 사용자 정의 함수

3. 내장함수
	- 파이썬에서 항상 사용할 수 있는 함수의 모임
	- import 할 필요없이 바로 사용할 수 있음

	1) 문자열 내장함수(4가지)
	- chr()
		- 모든 문자는 자신만의 코드값을 가지고 있음(문자코드 : 아스키코드, 유니코드 등)
		- 특정 문자의 유니코드 값을 전달하면 해당 유니코드 값을 가짐
		- 문자를 반환하는 함수
	- eval()
		- 실행하고자 하는 표현식을 문자열로 전달하면 표현식의 결과값을 반환하는 함수
	- format()	
		- 전달받은 인수와 포맷 코드에 따라 형식을 갖춘 문자열 반환하는 함수
		- 포맷코드는 전달하지 않을 수 있으며, str()함수를 호출하는것과 동일한 효과가 나타남
	- str()
		- 전달받은 인수를 문자열로 반환하는 함수

	2) 숫자 내장함수(9개)
	- abs()
		- 전달된 인수(정수 또는 실수)의 절대값을 반환해주는 함수
	- divmod()
		- 전달된 두 인수를 나누어서 몫과 나머지를 한쌍의 결과로 반환해주는 함수
	- float()
		- 전달된 인수(숫자 또는 문자열)를 실수를 만들어서 반환
		- 전달된 인수가 없을 때는 0.0을 반환
	- int()
		- 전달된 인수를 정수로 만들어서 반환
		- 전달된 인수가 없을 때는 0을 반환
	- max()
		- 전달된 인수중 가장 큰 값을 반환
	- min()
		- 전달된 인수중 가장 작은 값을 반환
	- pow()
		- 전달된 인수의 거듭제곱을 반환
		- 연산자 중 거듭제곱연산자(**)와 동일
	- round()
		- 전달된 인수를 이용해서 반올림한 값을 반환
		- 전달된 인수가 한개면 정수로 반올림한 값을 반환
		  전달된 인수가 두개이면 두번째로 전달된 인수만큼 소수점을 남겨둠
	<사사오입>
	0-4 숫자를 반올림하면 0으로 버리고, 5-9 숫자를 반올림하면 0으로 버리고 다음자리 숫자에 +1
	1.4 -> 1				1.5 -> 2

	<오사오입>
	반올림하는 숫자가 5
	- 0-4 숫자를 반올림하면 0으로 버림
	- 6-9 숫자를 반올림하면 다음자리 숫자에 +1
	- 5 숫자를 반올림할 때 	- 다음자리 숫자가 홀수인경우 1.5	2
				- 다음자리 숫자가 짝수인경우 2.5	2

	- sum()
		- 전달된 리스트나 튜플과 같은 반복가능객체의 합을 반환
		- 숫자가 아닌 값(str 등)을 전달하면 에러가 발생	=> 숫자 내장함수기 때문에

	3) 시퀀스 내장함수(5개)
	- enumerate()
		- 리스트와 함께 사용할 수 있음
		- 저장된 요소와 해당 요소의 인덱스가 튜플형태로 함께 출력됨
		
		for item in enumerate([리스트]):
			print(item)
		- item은 튜플형태, 각 튜플의 첫번째 요소는 리스트의 인덱스 번호, 
			두번째 요소는 리스트에 저장된 값으로 출력
		
	- range()
		- for문과 함께 사용함
		- 전달된 인수값에 따라서 시퀀스 자료형의 데이터를 생성하는 함수
		- 특정 범위 값을 생성하기 때문에 범위 생성자
		- range()의 자료형은 range =>  list()함수나 tuple()함수를 통해서 변환해서 사용하기도함
		print(range())
		print(list(range()))
		print(tuple(range()))
	- len()
		- 전달된 객체의 길이(항목수)를 반환하는 함수
			len('hello') => 5	len([1,2,3,4,5]) => 5
			len(1m, 2m, 3m) => 오류발생(하나의 자료형으로만 사용해야함)
	- sorted()
		- 전달된 반복객체의 오름차순 정렬 결과를 반환
		- (, reverse = True) 내림차순 정렬 결과를 반환
	- zip()
		- 전달된 여러개의 반복가능객체의 각 요소를 튜플로 반환하는 함수
		- 전달된 반복가능객체의 길이가 서로 다르면 길이가 짧은 반복가능객체를 기준으로 동작



















