day04_20221121

[과제]
과제 제출 기한 : ~ 11/23/17시까지

vs code에서 진행 후 .py 파일 3개 zip파일로 압축해서 메일 제출

------------------------------------------------

1. 네이버 스포츠 > 야구 > 기록/순위 에서 1위부터 10위까지 순위와 구단명 추출하기

[결과]
1위 : SSG
2위 : LG
3위 : 키움
4위 : KT
5위 : KIA
6위 : NC
7위 : 삼성
8위 : 롯데
9위 : 두산
10위 : 한화


2. 멜론 TOP 100 가수명, 노래제목 추출 후 파일명 : melon.csv 으로 저장하기
- 상태코드 확인
- Top 100 가수명과 노래제목 추출(find / find_all 사용)
- csv 파일로 저장하기

3. 네이버 영화 랭킹 추출 후 파일명 : movie.txt로 저장하기
- 상태코드 확인
- 네이버 영화순위 추출
- txt 파일로 저장하기

----------------------------------------------------------------------
[과제 시 참고]

User-Agent
	사용자 소프트웨어의 식별 정보 
	https://www.useragentstring.com/		=> 브라우저 설정해서 가져올 수 있음
	https://www.whatismybrowser.com/detect/what-is-my-user-agent/	=> 현재 운영체제의 User-Agent 가져올 수 있음

중첩 요소(형제)	
		next_siblings
		본인을 제외한 다음 형제들
		next_sibling
		본인을 제외한 다음 형제 하나

		previous_siblings
		본인을 제외한 이전 형제들
		previous_sibling
		본인을 제외한 이전 형제 하나


CSS 선택자(selector) 활용

	1.자식 선택자, 하위 선택자
		자식 선택자 
		바로 아래의 있는 자식 태그를 찾을 때 
		ex) div > p 
		div태그 바로 아래에 있는 p태그


		하위 선택자
		하위(자손) 태그를 찾을 때 
		ex) div p 
		div태그 아래에 있는 p태그	

	
	3. 속성

		태그명#아이디명 해당 태그중에 해당 아이디명으로 찾기
		태그명.클래스명 해당 태그중에 해당 클래스명으로 찾기 
		태그명[속성명] 해당 태그중에 해당 속성을 가진 태그 찾기
		태그명[속성명="속성값"]해당 속성값을 가진 태그 찾기
	
	4. 활용 메소드

		select()
			지정한 태그들을 모두 가져와서 리스트에 보관
			태그: soup.select('태그명')
			태그내용: soup.select('태그명')[0].text
			속성값: soup.select('태그명.클래스명')

		select_one()
			지정된 태그들 중에서 가장 첫번째 태그만 가져오기
			태그: soup.select_one('태그명')
			태그내용: soup.select_one('태그명').text
			속성값: soup.select_one('태그명.클래스명')
			       soup.select_one('태그명#아이디명')


문자열 메소드
	count()
	해당 문자열에서 특정 문자열의 개수를 반환
	문자열.count('특정문자열')

	find()
	해당 문자열에서 특정 문자열의 인덱스를 반환
	문자열.find('특정문자열')
	* 찾는 문자열이 없는 경우 -1을 반환

	upper()
	대문자로 변환한 문자열 반환
	문자열.upper()

	lower()
	소문자로 변환한 문자열 반환
	문자열.lower()

	capitalize()
	첫글자는 대문자로 나머지는 소문자로 변환한 문자열 반환
	문자열.capitalize()
	
	join()
	인수로 전달한 반복가능객체의 각 요소 사이에 문자열을 포함시켜 새로운 문자열을 반환
	문자열.join(반복가능객체)

	split()
	하나의 문자열을 여러개의 문자열로 분리해서 저장한 리스트 반환
	분리 기준 지정 가능
	문자열.split('기준 문자열')
	
	replace()
	문자열의 일부 문자열을 다른 문자열로 바꾼 결과를 반환
	문자열.replace('바꿀 문자열', '새로운 문자열')
	
	strip()
	양쪽 끝에 있는 불필요한 문자열을 제거한 문자열 반환
	제거할 문자열 지정 가능
	문자열.strip('제거할 문자열')



쿼리스트링
URL 상에 데이터를 담아 서버에 전달하는 방식
	requests.get(url, params = {"key1":"value1", "key2":"value2"})


파일 복습
	1. with문
		with문이 끝날 때 close() 메소드 호출
		with open(파일명, 모드) as 파일객체:
			파일 처리 코드
		
		ex) with open('test.csv', 'w', newline='')as file:
	
	2. newline 옵션
		csv 파일 작성시 줄바꿈이 자동으로 추가되는것을 방지

	3. quotechar 옵션
		delimiter 옵션으로 분리되면 안되는 데이터를 묶어주는 문자를 지정

	4. delimiter
		구분 문자
	
		리스트 = [[1행], [2행], [3행]... [n행]]	


