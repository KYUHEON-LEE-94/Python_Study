day01

1일차 수업예제 링크
https://colab.research.google.com/drive/14f20ib7xNZ7qy08Lo2TAeBvl6uOzq4xJ?usp=sharing

메모장 단축키
글꼴 > ctrl + 마우스 스크롤바

폴더만들기 단축키
ctrl + shift + n

이름 바꿀 때 단축키
F2
------------------------------------------------------
1. 오리엔테이션
1) 강사 소개
- 이름 : 김영선 강사
- 과목 : 파이썬 자료구조
- 교재 : 멘토시리즈 파이썬(복습, 문제풀이 등 보충교재로 사용)
- 메일 : yskim1635@gmail.com
	메일 제목 : 파이썬2_1900_본인이름
	본문 내용 : 소스내용을 그대로 붙이기
		  결과화면 : 이미지 캡처

		정답을 알려드리지 않는다!!
		why : 문제해결능력을 키워야하기 때문에

	과제 제출 : 코랩 링크 공유로 메일 보내기	

2) 수업 일정
- 수업시간 :  11/11~12/07, 10회

	11/11, 11/14, 11/16, 11/21, 11/23, 11/25, 11/28, 11/30, 12/05, 12/07
	금 / 월 수 / 월 수 금 / 월 수  / 월 수

	3시간 => 50분 수업, 10분 휴식
	3h * 10 = 30h

	※ 휴강일 없음!!!(결석, 지각 하지 않기)

- 수업 방식 : 대면 + 비대면
	대면 고정좌석!!
	대면 왔다가 비대면으로 수업들을 경우 다른 사람이 앉을 수 있음
	외부 유출금지!! 개인만 소장!!!
	
	이론 및 설명(메모장) -> 예제 -> 실습(과제)

- 수업 자료 제공
	오픈 카카오 채팅방
	hhttps://open.kakao.com/o/gPh7ncNe
	참여 코드 : 1111B
	- 수업자료제공
	- 과제 제공
	
	※ 배려있는 채팅방 문화를 위해 활동시간 지키기(9:00AM~11:00PM)
	
------------------------------------------------------------------
[Python]

1. Python
	- 고급언어
	- 귀도 반 로섬 개발한 언어
	- 저급언어 고급언어 번역프로그램 : 컴파일, 인터프리터

2. python 특징
	- 인터프리터 언어
	- 완전 객체지향언어(<-> 절차지향언어:C언어)

3. python 개발도구
	- 비주얼스튜디오 코드, 구글 코랩, 비주얼 스튜디오, 파이참, 쥬피터 노트북,...

4. 파이썬 기본 문법
1) 주석(comment)
	문장의 뜻을 쉽게 풀이해놓은 것(설명문)
	프로그램 수행에는 전혀 영향을 미치지 않음
	개발자간의 소통
	사용법 : 한줄 주석 #
		여러줄 주석 '''~''', """~"""

2) 변수
	변수 : 값을 저장하는 저장공간
		값을 재사용하기 위해서 사용함
	변수명 : 저장공간의 이름

	변수명 작성 규칙
	- 띄어쓰기 (공백) 사용 불가능
		my name (x)
		my_name	(o)	: 팟홀표기법, 스네이크표기법
		myName 	(o)	: 카멜표기법
	- 특수문자는 사용 불가능 (_ 언더바만 사용가능)
	- 숫자로 시작이 불가능
		1name 	(x)
		name1	(o)
		n1ame	(o)
	- 키워드 사용 불가능
		class, if, while, ...
	- 문자로 시작, 소문자를 사용, 뜻이 있는 단어 선택(권고)
		a = "김영선" (x)
		name = "김영선" (o)

3) 입출력 함수
	input() : 입력함수
		사용자가 입력하는 내용이 들어감
		사용자가 입력한 값이 항상 문자열(str) 타입으로 전달
		숫자로 전달하고 싶을 때는 형변환이 필요함!!!

	print()	: 출력함수
		- %연산자
		- '문자열 {}'.format(값)
		- f'문자열 {값}'

4) 기본 자료형(Data Type)
	자료형 : 프로그래밍을 할 때 쓰이는 숫자, 문자열 등 변수형태로 사용하는 모든 것을 의미함

① 숫자 자료형(정수형, 실수형)
	정수(int) : 양의정수, 음의 정수, 0
	실수(float) : 숫자에 소수점이 있는 것
	숫자 자료형끼리는 숫자와 연산자로 계산이 가능
	정수 + 실수 = 실수
	정수 / 정수 = 실수

② 논리 자료형(bool)
	참과 거짓을 의미하는 True, False 값만 가짐

③ 문자열 자료형(str)
	따옴표로 묶인 연속된 문자 집합의미
	따옴표 안에 숫자가 있다면 숫자라도 문자열
	시퀀스 자료형
	
	- 인덱싱, 슬라이싱
	- 인덱스 시작위치 0, 끝위치 -1
	- 문자열의 슬라이싱(부분집합 구할 때 사용) 슬라이스 연산자([] 및 [::])를 사용
	- 문자열 연산자 : +(연결) => 문자열 + 문자열
			*(반복) => 문자열 * 정수형

5) 컬렉션(list, tuple, set, dict)
① list
	- 시퀀스 데이터 유형
	- 리스트에는 쉼표로 구분, 대괄호[] 묶인 항목
	- 인덱스 시작위치 0, 끝위치 -1
	- 리스트에 저장된 값은 슬라이스 연산자 [], [::] 사용
	- 생성, 삭제, 수정 가능
	- 문자열 연산자 : + 연결, * 반복

② tuple
	- 리스트와 비슷한 또 다른 시퀀스 데이터 유형
	- 튜플은 쉼표로 구분, 소괄호() 묶인 항목
	- 읽기 전용 리스트

③ set
	- 중복된 값이 저장 불가능
	- 세트는 쉼표로 구분, 중괄호{} 묶인 항목
	- 순서의 개념이 없다!!

④ dict
	- 해시테이블 형식, key와 value 한 쌍으로 이루어진 자료형
	- 쉼표로 구분된 여러 값으로 구성
	- 중괄호{} 묶여 :콜론으로 한쌍이 이루어짐 {key1:value1, key2:value2}, ...
	- 순서의 개념이 없다!!

	리스트	튜플 	세트
	순서o	순서o	순서x
	중복o	중복o	중복x
	수정o	수정x	수정o

6) 연산자 우선순위
	최우선 연산자
	단항 연산자
	산술 연산자
	쉬프트 연산자
	관계 연산자
	논리 연산자
	삼항 연산자
	대입 연산자

7) 제어문
	프로그래밍 언어에서 실행순서 변경
	조건에 따라서 실행해야할 문장을 결정
	특정한 문장을 반복해야할 때 사용
(1) 조건문
① if 문
	하나의 if문이 있는 경우 조건식의 결과에 따른 하나 이상의 문이 올 수 있다
	조건이 참이 경우에만 실행
	if 조건식:
	    조건식이 참일 때 실행할 문장

② if ~ else문
	하나의 if문에 선택적으로 else문을 사용가능
	else는 if문의 조건식의 결과가 False일 때 실행
	조건이 참일 때와 거짓일 때 다른 코드를 실행하려고 하는 경우에 사용함

	if 조건식:
	    조건식이 참일때 실행할 문장
	else:
	    조건식이 거짓일 때 실행할 문장

③ if ~ elif ~else 문
	하나의 if문에 다른 결과를 더 받아내야할 때 사용

	if 조건식1:
	    조건식1이 참일 때 실행할 문장
	elif 조건식2:
	    조건식 1이 거짓이고 조건식 2가 참일 때 실행할 문장
	else:
	    조건식1도 거짓이고 조건식 2도 거짓일 때 실행할 문장

④ 중첩 if문
	하나의 if문안에서 다른 if문을 다시 사용가능
	조건이 복잡한 경우 사용

	if 조건식1:
	    조건식1이 참일 때 수행할 문장
	    if 조건식2:
		조건식1이 참이고 조건식2도 참일 때 수행할 문장
	    else:
		조건식1이 참이고 조건식2가 거짓일 때 수행할 문장
	else:
	    조건식1이 거짓일 때 수행할 문장

(2) 반복문
① while문
	조건식이 참일 때 반복수행

	while 조건:
	    조건이 참인 동안 반복 실행할 문장


② for문
	반복 객체가 있을때 반복수행 

	for 변수명 in 반복가능객체:
	    반복실행할 문장

(+) 리스트 컴프리헨션
	[요소 for문 if문]
		해당 요소를 반복문과 if문을 적용해서 리스트에 추가해준다


8) 사용자 정의 함수
	반복되는 코드, 행위, 기능들을 쉽게 관리하기 위해서 선언하여 사용

	def 함수명(매개변수):
		실행할 문장
		return 리턴값

	함수 사용 목적
	1. 코드의 간결화
	2. 코드의 재사용

① 함수 정의 : 함수를 만드는 것을 의미, def 키워드를 이용함
② 인수와 매개변수 : 함수로 전달되는 인수를 저장하는 변수를 매개변수라고 함
③ 함수 호출 : 정의된 함수를 사용하겠다는 의미
	1) 매개변수x, 반환값x
		함수이름()
	2) 매개변수o, 반환값x
		함수이름(인수)
	3) 매개변수x, 반환값o
		변수 = 함수이름()
	4) 매개변수o, 반환값o
		변수 = 함수이름(인수)
④ 반환값(return value) : 함수 호출 결과를 의미
			함수 종료의 의미도 가지고 있음





	
























